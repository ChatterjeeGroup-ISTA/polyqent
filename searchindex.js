Search.setIndex({"alltitles": {"Coefficient module": [[3, null]], "Constant module": [[4, null]], "Constraint module": [[5, null]], "Convertor module": [[6, null]], "DNF module": [[7, null]], "Farkas module": [[8, null]], "Handelman module": [[9, null]], "Indices and tables": [[1, null]], "Main module": [[15, null]], "Parser module": [[10, null]], "PolyQEnt": [[0, null], [1, null]], "PolyQEnt API": [[1, null]], "Polynomial module": [[2, null]], "PositiveModel module": [[11, null]], "Putinar module": [[12, null]], "Solver module": [[13, null]], "UnknownVariable module": [[14, null]]}, "docnames": ["README", "index", "polyqent", "polyqent.Coefficient", "polyqent.Constant", "polyqent.Constraint", "polyqent.Convertor", "polyqent.DNF", "polyqent.Farkas", "polyqent.Handelman", "polyqent.Parser", "polyqent.PositiveModel", "polyqent.Putinar", "polyqent.Solver", "polyqent.UnknownVariable", "polyqent.main"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["README.rst", "index.rst", "polyqent.rst", "polyqent.Coefficient.rst", "polyqent.Constant.rst", "polyqent.Constraint.rst", "polyqent.Convertor.rst", "polyqent.DNF.rst", "polyqent.Farkas.rst", "polyqent.Handelman.rst", "polyqent.Parser.rst", "polyqent.PositiveModel.rst", "polyqent.Putinar.rst", "polyqent.Solver.rst", "polyqent.UnknownVariable.rst", "polyqent.main.rst"], "indexentries": {"add_default_config() (in module polyqent.main)": [[15, "polyqent.main.add_default_config", false]], "add_paired_constraint() (polyqent.positivemodel.positivemodel method)": [[11, "polyqent.PositiveModel.PositiveModel.add_paired_constraint", false]], "add_variables() (polyqent.polynomial.polynomial method)": [[2, "polyqent.Polynomial.Polynomial.add_variables", false]], "availabilitydict (class in polyqent.constant)": [[4, "polyqent.Constant.AvailabilityDict", false]], "available() (polyqent.constant.availabilitydict static method)": [[4, "polyqent.Constant.AvailabilityDict.available", false]], "coefficient (class in polyqent.coefficient)": [[3, "polyqent.Coefficient.Coefficient", false]], "coefficient (polyqent.constraint.coefficientconstraint attribute)": [[5, "polyqent.Constraint.CoefficientConstraint.coefficient", false]], "coefficient (polyqent.polynomial.monomial attribute)": [[2, "polyqent.Polynomial.Monomial.coefficient", false]], "coefficientconstraint (class in polyqent.constraint)": [[5, "polyqent.Constraint.CoefficientConstraint", false]], "command (polyqent.constant.constant attribute)": [[4, "polyqent.Constant.Constant.command", false]], "constant (class in polyqent.constant)": [[4, "polyqent.Constant.Constant", false]], "constant (polyqent.coefficient.element attribute)": [[3, "polyqent.Coefficient.Element.constant", false]], "convert_constraints_to_smt_format() (polyqent.solver.solver static method)": [[13, "polyqent.Solver.Solver.convert_constraints_to_smt_format", false]], "convert_general_string_to_poly() (in module polyqent.convertor)": [[6, "polyqent.Convertor.convert_general_string_to_poly", false]], "convert_to_desired_poly() (in module polyqent.convertor)": [[6, "polyqent.Convertor.convert_to_desired_poly", false]], "convert_to_preorder() (polyqent.coefficient.coefficient method)": [[3, "polyqent.Coefficient.Coefficient.convert_to_preorder", false]], "convert_to_preorder() (polyqent.coefficient.element method)": [[3, "polyqent.Coefficient.Element.convert_to_preorder", false]], "convert_to_preorder() (polyqent.constraint.coefficientconstraint method)": [[5, "polyqent.Constraint.CoefficientConstraint.convert_to_preorder", false]], "convert_to_preorder() (polyqent.constraint.polynomialconstraint method)": [[5, "polyqent.Constraint.PolynomialConstraint.convert_to_preorder", false]], "convert_to_preorder() (polyqent.dnf.dnf method)": [[7, "polyqent.DNF.DNF.convert_to_preorder", false]], "convert_to_preorder() (polyqent.polynomial.monomial method)": [[2, "polyqent.Polynomial.Monomial.convert_to_preorder", false]], "convert_to_preorder() (polyqent.polynomial.polynomial method)": [[2, "polyqent.Polynomial.Polynomial.convert_to_preorder", false]], "convert_to_preorder() (polyqent.unknownvariable.unknownvariable method)": [[14, "polyqent.UnknownVariable.UnknownVariable.convert_to_preorder", false]], "core_iteration() (polyqent.positivemodel.positivemodel method)": [[11, "polyqent.PositiveModel.PositiveModel.core_iteration", false]], "create_smt_file() (polyqent.positivemodel.positivemodel method)": [[11, "polyqent.PositiveModel.PositiveModel.create_smt_file", false]], "default_path (polyqent.constant.constant attribute)": [[4, "polyqent.Constant.Constant.default_path", false]], "degree_for_new_var (polyqent.putinar.putinar attribute)": [[12, "polyqent.Putinar.Putinar.degree_for_new_var", false]], "degree_of_nonstrict_unsat (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.degree_of_nonstrict_unsat", false]], "degree_of_sat (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.degree_of_sat", false]], "degree_of_strict_unsat (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.degree_of_strict_unsat", false]], "degrees (polyqent.polynomial.monomial attribute)": [[2, "polyqent.Polynomial.Monomial.degrees", false]], "dict_from_degrees_to_monomials (polyqent.polynomial.polynomial attribute)": [[2, "polyqent.Polynomial.Polynomial.dict_from_degrees_to_monomials", false]], "dnf (class in polyqent.dnf)": [[7, "polyqent.DNF.DNF", false]], "element (class in polyqent.coefficient)": [[3, "polyqent.Coefficient.Element", false]], "elements (polyqent.coefficient.coefficient attribute)": [[3, "polyqent.Coefficient.Coefficient.elements", false]], "execute() (in module polyqent.main)": [[15, "polyqent.main.execute", false]], "execute_readable() (in module polyqent.main)": [[15, "polyqent.main.execute_readable", false]], "execute_smt2() (in module polyqent.main)": [[15, "polyqent.main.execute_smt2", false]], "farkas (class in polyqent.farkas)": [[8, "polyqent.Farkas.Farkas", false]], "farkas (polyqent.constant.theorem attribute)": [[4, "polyqent.Constant.Theorem.FARKAS", false]], "find_equality_constraint() (polyqent.solver.solver static method)": [[13, "polyqent.Solver.Solver.find_equality_constraint", false]], "find_index_of_variable() (in module polyqent.convertor)": [[6, "polyqent.Convertor.find_index_of_variable", false]], "get_all_variable() (polyqent.solver.solver static method)": [[13, "polyqent.Solver.Solver.get_all_variable", false]], "get_constant_polynomial() (polyqent.solver.solver static method)": [[13, "polyqent.Solver.Solver.get_constant_polynomial", false]], "get_deg() (polyqent.polynomial.monomial method)": [[2, "polyqent.Polynomial.Monomial.get_deg", false]], "get_deg() (polyqent.polynomial.polynomial method)": [[2, "polyqent.Polynomial.Polynomial.get_deg", false]], "get_degree_polynomial() (polyqent.solver.solver static method)": [[13, "polyqent.Solver.Solver.get_degree_polynomial", false]], "get_equality_constraint() (polyqent.positivemodel.positivemodel static method)": [[11, "polyqent.PositiveModel.PositiveModel.get_equality_constraint", false]], "get_general_template() (polyqent.putinar.putinar static method)": [[12, "polyqent.Putinar.Putinar.get_general_template", false]], "get_generated_constraints() (polyqent.positivemodel.positivemodel method)": [[11, "polyqent.PositiveModel.PositiveModel.get_generated_constraints", false]], "get_lists_with_fixed_len() (polyqent.handelman.handelman method)": [[9, "polyqent.Handelman.Handelman.get_lists_with_fixed_len", false]], "get_lower_triangular_matrix() (polyqent.putinar.putinar method)": [[12, "polyqent.Putinar.Putinar.get_lower_triangular_matrix", false]], "get_monoids() (polyqent.handelman.handelman method)": [[9, "polyqent.Handelman.Handelman.get_monoids", false]], "get_monoids() (polyqent.putinar.putinar static method)": [[12, "polyqent.Putinar.Putinar.get_monoids", false]], "get_monomial_by_degree() (polyqent.polynomial.polynomial method)": [[2, "polyqent.Polynomial.Polynomial.get_monomial_by_degree", false]], "get_new_id() (polyqent.unknownvariable.unknownvariable static method)": [[14, "polyqent.UnknownVariable.UnknownVariable.get_new_id", false]], "get_poly_sum() (polyqent.farkas.farkas method)": [[8, "polyqent.Farkas.Farkas.get_poly_sum", false]], "get_poly_sum() (polyqent.handelman.handelman method)": [[9, "polyqent.Handelman.Handelman.get_poly_sum", false]], "get_poly_sum() (polyqent.putinar.putinar method)": [[12, "polyqent.Putinar.Putinar.get_poly_sum", false]], "get_polynomial() (polyqent.positivemodel.positivemodel method)": [[11, "polyqent.PositiveModel.PositiveModel.get_polynomial", false]], "get_sat (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.get_SAT", false]], "get_sat_constraint() (polyqent.farkas.farkas method)": [[8, "polyqent.Farkas.Farkas.get_SAT_constraint", false]], "get_sat_constraint() (polyqent.handelman.handelman method)": [[9, "polyqent.Handelman.Handelman.get_SAT_constraint", false]], "get_sat_constraint() (polyqent.putinar.putinar method)": [[12, "polyqent.Putinar.Putinar.get_SAT_constraint", false]], "get_strict (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.get_strict", false]], "get_sum_of_square() (polyqent.putinar.putinar method)": [[12, "polyqent.Putinar.Putinar.get_sum_of_square", false]], "get_unsat (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.get_UNSAT", false]], "get_unsat_constraint() (polyqent.farkas.farkas method)": [[8, "polyqent.Farkas.Farkas.get_UNSAT_constraint", false]], "get_unsat_constraint() (polyqent.handelman.handelman method)": [[9, "polyqent.Handelman.Handelman.get_UNSAT_constraint", false]], "get_unsat_constraint() (polyqent.putinar.putinar method)": [[12, "polyqent.Putinar.Putinar.get_UNSAT_constraint", false]], "get_variable_polynomial() (polyqent.solver.solver static method)": [[13, "polyqent.Solver.Solver.get_variable_polynomial", false]], "handel_strict() (polyqent.putinar.putinar method)": [[12, "polyqent.Putinar.Putinar.handel_strict", false]], "handelman (class in polyqent.handelman)": [[9, "polyqent.Handelman.Handelman", false]], "handelman (polyqent.constant.theorem attribute)": [[4, "polyqent.Constant.Theorem.HANDELMAN", false]], "id (polyqent.unknownvariable.unknownvariable attribute)": [[14, "polyqent.UnknownVariable.UnknownVariable.id", false]], "instructions (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.instructions", false]], "is_equality() (polyqent.constraint.coefficientconstraint method)": [[5, "polyqent.Constraint.CoefficientConstraint.is_equality", false]], "is_linear() (polyqent.polynomial.polynomial method)": [[2, "polyqent.Polynomial.Polynomial.is_linear", false]], "is_mono() (polyqent.polynomial.monomial method)": [[2, "polyqent.Polynomial.Monomial.is_mono", false]], "is_strict() (polyqent.constraint.coefficientconstraint method)": [[5, "polyqent.Constraint.CoefficientConstraint.is_strict", false]], "is_strict() (polyqent.constraint.polynomialconstraint method)": [[5, "polyqent.Constraint.PolynomialConstraint.is_strict", false]], "lhs (polyqent.farkas.farkas attribute)": [[8, "polyqent.Farkas.Farkas.LHS", false]], "lhs (polyqent.handelman.handelman attribute)": [[9, "polyqent.Handelman.Handelman.LHS", false]], "lhs (polyqent.putinar.putinar attribute)": [[12, "polyqent.Putinar.Putinar.LHS", false]], "literals (polyqent.dnf.dnf attribute)": [[7, "polyqent.DNF.DNF.literals", false]], "load_config() (in module polyqent.main)": [[15, "polyqent.main.load_config", false]], "max_d_for_sat (polyqent.handelman.handelman attribute)": [[9, "polyqent.Handelman.Handelman.max_d_for_sat", false]], "max_d_for_sat (polyqent.putinar.putinar attribute)": [[12, "polyqent.Putinar.Putinar.max_d_for_sat", false]], "max_d_for_unsat (polyqent.handelman.handelman attribute)": [[9, "polyqent.Handelman.Handelman.max_d_for_unsat", false]], "max_d_for_unsat (polyqent.putinar.putinar attribute)": [[12, "polyqent.Putinar.Putinar.max_d_for_unsat", false]], "max_d_for_unsat_strict (polyqent.putinar.putinar attribute)": [[12, "polyqent.Putinar.Putinar.max_d_for_unsat_strict", false]], "max_d_of_strict (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.max_d_of_strict", false]], "model (polyqent.parser.parser attribute)": [[10, "polyqent.Parser.Parser.model", false]], "module": [[2, "module-polyqent.Polynomial", false], [3, "module-polyqent.Coefficient", false], [4, "module-polyqent.Constant", false], [5, "module-polyqent.Constraint", false], [6, "module-polyqent.Convertor", false], [7, "module-polyqent.DNF", false], [8, "module-polyqent.Farkas", false], [9, "module-polyqent.Handelman", false], [10, "module-polyqent.Parser", false], [11, "module-polyqent.PositiveModel", false], [12, "module-polyqent.Putinar", false], [13, "module-polyqent.Solver", false], [14, "module-polyqent.UnknownVariable", false], [15, "module-polyqent.main", false]], "monomial (class in polyqent.polynomial)": [[2, "polyqent.Polynomial.Monomial", false]], "monomials (polyqent.polynomial.polynomial attribute)": [[2, "polyqent.Polynomial.Polynomial.monomials", false]], "name (polyqent.unknownvariable.unknownvariable attribute)": [[14, "polyqent.UnknownVariable.UnknownVariable.name", false]], "number_of_variables (polyqent.unknownvariable.unknownvariable attribute)": [[14, "polyqent.UnknownVariable.UnknownVariable.number_of_variables", false]], "options (polyqent.constant.constant attribute)": [[4, "polyqent.Constant.Constant.options", false]], "paired_constraint (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.paired_constraint", false]], "parse_readable_file() (polyqent.parser.parser method)": [[10, "polyqent.Parser.Parser.parse_readable_file", false]], "parse_smt_file() (polyqent.parser.parser method)": [[10, "polyqent.Parser.Parser.parse_smt_file", false]], "parser (class in polyqent.parser)": [[10, "polyqent.Parser.Parser", false]], "polynomial (class in polyqent.polynomial)": [[2, "polyqent.Polynomial.Polynomial", false]], "polynomial (polyqent.constraint.polynomialconstraint attribute)": [[5, "polyqent.Constraint.PolynomialConstraint.polynomial", false]], "polynomialconstraint (class in polyqent.constraint)": [[5, "polyqent.Constraint.PolynomialConstraint", false]], "polyqent.coefficient": [[3, "module-polyqent.Coefficient", false]], "polyqent.constant": [[4, "module-polyqent.Constant", false]], "polyqent.constraint": [[5, "module-polyqent.Constraint", false]], "polyqent.convertor": [[6, "module-polyqent.Convertor", false]], "polyqent.dnf": [[7, "module-polyqent.DNF", false]], "polyqent.farkas": [[8, "module-polyqent.Farkas", false]], "polyqent.handelman": [[9, "module-polyqent.Handelman", false]], "polyqent.main": [[15, "module-polyqent.main", false]], "polyqent.parser": [[10, "module-polyqent.Parser", false]], "polyqent.polynomial": [[2, "module-polyqent.Polynomial", false]], "polyqent.positivemodel": [[11, "module-polyqent.PositiveModel", false]], "polyqent.putinar": [[12, "module-polyqent.Putinar", false]], "polyqent.solver": [[13, "module-polyqent.Solver", false]], "polyqent.unknownvariable": [[14, "module-polyqent.UnknownVariable", false]], "positivemodel (class in polyqent.positivemodel)": [[11, "polyqent.PositiveModel.PositiveModel", false]], "preconditions (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.preconditions", false]], "program_variables (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.program_variables", false]], "putinar (class in polyqent.putinar)": [[12, "polyqent.Putinar.Putinar", false]], "putinar (polyqent.constant.theorem attribute)": [[4, "polyqent.Constant.Theorem.PUTINAR", false]], "pysmt_to_smt2() (in module polyqent.main)": [[15, "polyqent.main.pysmt_to_smt2", false]], "remove_equality_constraints() (polyqent.positivemodel.positivemodel static method)": [[11, "polyqent.PositiveModel.PositiveModel.remove_equality_constraints", false]], "revise() (polyqent.coefficient.coefficient method)": [[3, "polyqent.Coefficient.Coefficient.revise", false]], "revise() (polyqent.polynomial.polynomial method)": [[2, "polyqent.Polynomial.Polynomial.revise", false]], "rhs (polyqent.farkas.farkas attribute)": [[8, "polyqent.Farkas.Farkas.RHS", false]], "rhs (polyqent.handelman.handelman attribute)": [[9, "polyqent.Handelman.Handelman.RHS", false]], "rhs (polyqent.putinar.putinar attribute)": [[12, "polyqent.Putinar.Putinar.RHS", false]], "run_on_solver() (polyqent.positivemodel.positivemodel method)": [[11, "polyqent.PositiveModel.PositiveModel.run_on_solver", false]], "sign (polyqent.constraint.coefficientconstraint attribute)": [[5, "polyqent.Constraint.CoefficientConstraint.sign", false]], "sign (polyqent.constraint.polynomialconstraint attribute)": [[5, "polyqent.Constraint.PolynomialConstraint.sign", false]], "smt_declare_variable_phase() (polyqent.solver.solver static method)": [[13, "polyqent.Solver.Solver.smt_declare_variable_phase", false]], "solver (class in polyqent.solver)": [[13, "polyqent.Solver.Solver", false]], "template_variables (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.template_variables", false]], "theorem (class in polyqent.constant)": [[4, "polyqent.Constant.Theorem", false]], "theorem_name (polyqent.positivemodel.positivemodel attribute)": [[11, "polyqent.PositiveModel.PositiveModel.theorem_name", false]], "traverse() (in module polyqent.convertor)": [[6, "polyqent.Convertor.traverse", false]], "traverse_readable_tree() (polyqent.parser.parser method)": [[10, "polyqent.Parser.Parser.traverse_readable_tree", false]], "traverse_smt_tree() (polyqent.parser.parser method)": [[10, "polyqent.Parser.Parser.traverse_smt_tree", false]], "type (polyqent.unknownvariable.unknownvariable attribute)": [[14, "polyqent.UnknownVariable.UnknownVariable.type", false]], "unknownvariable (class in polyqent.unknownvariable)": [[14, "polyqent.UnknownVariable.UnknownVariable", false]], "variables (polyqent.coefficient.element attribute)": [[3, "polyqent.Coefficient.Element.variables", false]], "variables (polyqent.farkas.farkas attribute)": [[8, "polyqent.Farkas.Farkas.variables", false]], "variables (polyqent.handelman.handelman attribute)": [[9, "polyqent.Handelman.Handelman.variables", false]], "variables (polyqent.polynomial.monomial attribute)": [[2, "polyqent.Polynomial.Monomial.variables", false]], "variables (polyqent.polynomial.polynomial attribute)": [[2, "polyqent.Polynomial.Polynomial.variables", false]], "variables (polyqent.putinar.putinar attribute)": [[12, "polyqent.Putinar.Putinar.variables", false]]}, "objects": {"polyqent": [[3, 0, 0, "-", "Coefficient"], [4, 0, 0, "-", "Constant"], [5, 0, 0, "-", "Constraint"], [6, 0, 0, "-", "Convertor"], [7, 0, 0, "-", "DNF"], [8, 0, 0, "-", "Farkas"], [9, 0, 0, "-", "Handelman"], [10, 0, 0, "-", "Parser"], [2, 0, 0, "-", "Polynomial"], [11, 0, 0, "-", "PositiveModel"], [12, 0, 0, "-", "Putinar"], [13, 0, 0, "-", "Solver"], [14, 0, 0, "-", "UnknownVariable"], [15, 0, 0, "-", "main"]], "polyqent.Coefficient": [[3, 1, 1, "", "Coefficient"], [3, 1, 1, "", "Element"]], "polyqent.Coefficient.Coefficient": [[3, 2, 1, "", "convert_to_preorder"], [3, 3, 1, "", "elements"], [3, 2, 1, "", "revise"]], "polyqent.Coefficient.Element": [[3, 3, 1, "", "constant"], [3, 2, 1, "", "convert_to_preorder"], [3, 3, 1, "", "variables"]], "polyqent.Constant": [[4, 1, 1, "", "AvailabilityDict"], [4, 1, 1, "", "Constant"], [4, 1, 1, "", "Theorem"]], "polyqent.Constant.AvailabilityDict": [[4, 2, 1, "", "available"]], "polyqent.Constant.Constant": [[4, 3, 1, "", "command"], [4, 3, 1, "", "default_path"], [4, 3, 1, "", "options"]], "polyqent.Constant.Theorem": [[4, 3, 1, "", "FARKAS"], [4, 3, 1, "", "HANDELMAN"], [4, 3, 1, "", "PUTINAR"]], "polyqent.Constraint": [[5, 1, 1, "", "CoefficientConstraint"], [5, 1, 1, "", "PolynomialConstraint"]], "polyqent.Constraint.CoefficientConstraint": [[5, 3, 1, "", "coefficient"], [5, 2, 1, "", "convert_to_preorder"], [5, 2, 1, "", "is_equality"], [5, 2, 1, "", "is_strict"], [5, 3, 1, "", "sign"]], "polyqent.Constraint.PolynomialConstraint": [[5, 2, 1, "", "convert_to_preorder"], [5, 2, 1, "", "is_strict"], [5, 3, 1, "", "polynomial"], [5, 3, 1, "", "sign"]], "polyqent.Convertor": [[6, 4, 1, "", "convert_general_string_to_poly"], [6, 4, 1, "", "convert_to_desired_poly"], [6, 4, 1, "", "find_index_of_variable"], [6, 4, 1, "", "traverse"]], "polyqent.DNF": [[7, 1, 1, "", "DNF"]], "polyqent.DNF.DNF": [[7, 2, 1, "", "convert_to_preorder"], [7, 3, 1, "", "literals"]], "polyqent.Farkas": [[8, 1, 1, "", "Farkas"]], "polyqent.Farkas.Farkas": [[8, 3, 1, "", "LHS"], [8, 3, 1, "", "RHS"], [8, 2, 1, "", "get_SAT_constraint"], [8, 2, 1, "", "get_UNSAT_constraint"], [8, 2, 1, "", "get_poly_sum"], [8, 3, 1, "", "variables"]], "polyqent.Handelman": [[9, 1, 1, "", "Handelman"]], "polyqent.Handelman.Handelman": [[9, 3, 1, "", "LHS"], [9, 3, 1, "", "RHS"], [9, 2, 1, "", "get_SAT_constraint"], [9, 2, 1, "", "get_UNSAT_constraint"], [9, 2, 1, "", "get_lists_with_fixed_len"], [9, 2, 1, "", "get_monoids"], [9, 2, 1, "", "get_poly_sum"], [9, 3, 1, "", "max_d_for_sat"], [9, 3, 1, "", "max_d_for_unsat"], [9, 3, 1, "", "variables"]], "polyqent.Parser": [[10, 1, 1, "", "Parser"]], "polyqent.Parser.Parser": [[10, 3, 1, "", "model"], [10, 2, 1, "", "parse_readable_file"], [10, 2, 1, "", "parse_smt_file"], [10, 2, 1, "", "traverse_readable_tree"], [10, 2, 1, "", "traverse_smt_tree"]], "polyqent.Polynomial": [[2, 1, 1, "", "Monomial"], [2, 1, 1, "", "Polynomial"]], "polyqent.Polynomial.Monomial": [[2, 3, 1, "", "coefficient"], [2, 2, 1, "", "convert_to_preorder"], [2, 3, 1, "", "degrees"], [2, 2, 1, "", "get_deg"], [2, 2, 1, "", "is_mono"], [2, 3, 1, "", "variables"]], "polyqent.Polynomial.Polynomial": [[2, 2, 1, "", "add_variables"], [2, 2, 1, "", "convert_to_preorder"], [2, 3, 1, "", "dict_from_degrees_to_monomials"], [2, 2, 1, "", "get_deg"], [2, 2, 1, "", "get_monomial_by_degree"], [2, 2, 1, "", "is_linear"], [2, 3, 1, "", "monomials"], [2, 2, 1, "", "revise"], [2, 3, 1, "", "variables"]], "polyqent.PositiveModel": [[11, 1, 1, "", "PositiveModel"]], "polyqent.PositiveModel.PositiveModel": [[11, 2, 1, "", "add_paired_constraint"], [11, 2, 1, "", "core_iteration"], [11, 2, 1, "", "create_smt_file"], [11, 3, 1, "", "degree_of_nonstrict_unsat"], [11, 3, 1, "", "degree_of_sat"], [11, 3, 1, "", "degree_of_strict_unsat"], [11, 3, 1, "", "get_SAT"], [11, 3, 1, "", "get_UNSAT"], [11, 2, 1, "", "get_equality_constraint"], [11, 2, 1, "", "get_generated_constraints"], [11, 2, 1, "", "get_polynomial"], [11, 3, 1, "", "get_strict"], [11, 3, 1, "", "instructions"], [11, 3, 1, "", "max_d_of_strict"], [11, 3, 1, "", "paired_constraint"], [11, 3, 1, "", "preconditions"], [11, 3, 1, "", "program_variables"], [11, 2, 1, "", "remove_equality_constraints"], [11, 2, 1, "", "run_on_solver"], [11, 3, 1, "", "template_variables"], [11, 3, 1, "", "theorem_name"]], "polyqent.Putinar": [[12, 1, 1, "", "Putinar"]], "polyqent.Putinar.Putinar": [[12, 3, 1, "", "LHS"], [12, 3, 1, "", "RHS"], [12, 3, 1, "", "degree_for_new_var"], [12, 2, 1, "", "get_SAT_constraint"], [12, 2, 1, "", "get_UNSAT_constraint"], [12, 2, 1, "", "get_general_template"], [12, 2, 1, "", "get_lower_triangular_matrix"], [12, 2, 1, "", "get_monoids"], [12, 2, 1, "", "get_poly_sum"], [12, 2, 1, "", "get_sum_of_square"], [12, 2, 1, "", "handel_strict"], [12, 3, 1, "", "max_d_for_sat"], [12, 3, 1, "", "max_d_for_unsat"], [12, 3, 1, "", "max_d_for_unsat_strict"], [12, 3, 1, "", "variables"]], "polyqent.Solver": [[13, 1, 1, "", "Solver"]], "polyqent.Solver.Solver": [[13, 2, 1, "", "convert_constraints_to_smt_format"], [13, 2, 1, "", "find_equality_constraint"], [13, 2, 1, "", "get_all_variable"], [13, 2, 1, "", "get_constant_polynomial"], [13, 2, 1, "", "get_degree_polynomial"], [13, 2, 1, "", "get_variable_polynomial"], [13, 2, 1, "", "smt_declare_variable_phase"]], "polyqent.UnknownVariable": [[14, 1, 1, "", "UnknownVariable"]], "polyqent.UnknownVariable.UnknownVariable": [[14, 2, 1, "", "convert_to_preorder"], [14, 2, 1, "", "get_new_id"], [14, 3, 1, "", "id"], [14, 3, 1, "", "name"], [14, 3, 1, "", "number_of_variables"], [14, 3, 1, "", "type"]], "polyqent.main": [[15, 4, 1, "", "add_default_config"], [15, 4, 1, "", "execute"], [15, 4, 1, "", "execute_readable"], [15, 4, 1, "", "execute_smt2"], [15, 4, 1, "", "load_config"], [15, 4, 1, "", "pysmt_to_smt2"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "terms": {"": 11, "0": [2, 5, 8, 9, 11, 12], "1": [2, 3, 8, 9, 12], "2": [2, 3, 12], "2x": 5, "3": [2, 3], "3y": 5, "4": 3, "5": [2, 3], "A": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14], "By": 14, "For": [2, 3, 14], "It": [2, 3, 6, 14], "The": [2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15], "accord": [8, 9, 12], "ad": [2, 3, 11, 13, 15], "add": [2, 11, 15], "add_default_config": [1, 15], "add_paired_constraint": [1, 11], "add_vari": 2, "after": [2, 3, 11], "algorithm": [8, 9, 11, 12, 14], "all": [6, 8, 9, 12, 13], "all_constraint": [11, 13], "all_monoid": 12, "all_vari": [6, 12], "alreadi": 15, "an": [2, 3, 4], "ani": [4, 10], "appli": 11, "ar": [2, 3, 4, 7, 8, 9, 12, 13], "arg": 4, "argument": 4, "arrai": [2, 4], "assign": 14, "avail": [1, 4], "availabilitydict": [1, 4], "b": [2, 3], "base": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "between": 5, "bool": [2, 5, 8, 9, 11, 12, 13], "boolean": [9, 11], "c": [2, 3], "can": [4, 5, 8, 9, 12, 14], "case": [8, 9, 11, 12], "check": [4, 11], "class": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "claus": 11, "coeffici": [1, 2, 5, 6, 8, 9, 12, 13], "coefficientconstraint": [1, 5, 8, 9, 11, 12, 13], "combin": 3, "command": [1, 4], "condit": 11, "config": 15, "config_path": 15, "configur": [4, 11, 15], "consist": [2, 3, 4, 13], "constant": [1, 3, 5, 11, 13], "constant_heurist": 11, "constraint": [1, 8, 9, 11, 12, 13, 15], "content": 10, "convert": [2, 3, 5, 6, 7, 11, 13, 14, 15], "convert_constraints_to_smt_format": [1, 13], "convert_general_string_to_poli": [1, 6], "convert_to_desired_poli": [1, 6], "convert_to_preord": [1, 2, 3, 5, 7, 14], "convertor": 1, "core": 11, "core_iter": [1, 11], "core_iteration_heurist": 11, "correspond": [2, 8, 9, 10], "creat": [8, 9, 10, 11, 14], "create_smt_fil": [1, 11], "d": 12, "declar": 13, "default": [3, 4, 8, 9, 11, 12, 13, 14, 15], "default_path": [1, 4], "defin": [4, 12, 13], "degre": [2, 9, 11, 12, 13], "degree_for_new_var": [1, 12], "degree_of_nonstrict_unsat": [1, 11], "degree_of_sat": [1, 11], "degree_of_strict_unsat": [1, 11], "determin": [2, 5, 8, 9, 11, 12], "diagon": 12, "dict": [4, 11, 15], "dict_from_degrees_to_monomi": 2, "dictionari": [2, 4, 11, 15], "dim": 12, "dimens": 12, "disjunct": 7, "dnf": [1, 11, 13], "each": [2, 9, 11, 12, 13, 14], "either": 15, "element": [1, 3, 9, 12], "enum": 4, "equal": [5, 9, 11, 12, 13], "everi": 12, "exampl": [2, 3, 5, 14], "execut": [1, 15], "execute_read": [1, 15], "execute_smt2": [1, 15], "f_1": [8, 9], "f_2": [8, 9], "f_i": [8, 9], "f_n": [8, 9], "fals": [4, 8, 9, 11, 12], "far": 9, "farka": [1, 4, 9, 12, 14], "file": [10, 11, 15], "find": [6, 8, 9, 11, 12, 13, 14], "find_equality_constraint": [1, 13], "find_index_of_vari": [1, 6], "float": 3, "form": [2, 3, 5, 7, 11, 12, 14], "format": [2, 3, 5, 7, 13, 14], "formula": 15, "fraction": [3, 14], "from": [6, 10, 11], "function": [2, 6, 8, 9, 10, 11, 12, 13], "g_1": 12, "g_2": 12, "g_i": 12, "g_j": 12, "g_n": 12, "gener": [6, 8, 9, 10, 11, 12, 13, 14], "get": [2, 11, 14], "get_all_vari": [1, 13], "get_constant_polynomi": [1, 13], "get_deg": 2, "get_degree_polynomi": [1, 13], "get_equality_constraint": [1, 11], "get_general_templ": [1, 12], "get_generated_constraint": [1, 11], "get_lists_with_fixed_len": [1, 9], "get_lower_triangular_matrix": [1, 12], "get_monoid": [1, 9, 12], "get_monomial_by_degre": 2, "get_new_id": [1, 14], "get_poly_sum": [1, 8, 9, 12], "get_polynomi": [1, 11], "get_sat": [1, 11], "get_sat_constraint": [1, 8, 9, 12], "get_strict": [1, 11], "get_sum_of_squar": [1, 12], "get_unsat": [1, 11], "get_unsat_constraint": [1, 8, 9, 12], "get_variable_polynomi": [1, 13], "give": 12, "given": [4, 6, 9, 11, 12, 13, 14, 15], "h_0": 12, "h_1": 12, "h_2": 12, "h_i": 12, "h_n": 12, "ha": 2, "hand": [8, 9, 11, 12, 13], "handel_strict": [1, 12], "handelman": [1, 4, 11], "handl": 12, "heurist": 11, "hierarch": 4, "horn": 11, "i": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15], "id": [1, 14], "independ": 11, "index": [1, 6], "input": [6, 10, 11], "instruct": [1, 11], "int": [2, 6, 9, 11, 12, 13, 14], "integ": [11, 13], "is_equ": [1, 5], "is_linear": 2, "is_mono": 2, "is_strict": [1, 5], "item": 4, "iter": 11, "ith": 9, "its": [2, 13], "j": 12, "keyword": 4, "known": 14, "kwarg": 4, "l": 12, "lark": [6, 10], "latest": 14, "left": [8, 9, 11, 12, 13], "lemma": 8, "length": 9, "less": 9, "lh": [1, 8, 9, 11, 12, 13], "linear": 2, "list": [2, 3, 6, 7, 8, 9, 11, 12, 13], "liter": [1, 7], "load": 15, "load_config": [1, 15], "lower": 12, "lst": 9, "main": [1, 11], "map": 2, "mathsat": 4, "matrix": 12, "max_d": [9, 12], "max_d_for_sat": [1, 9, 12], "max_d_for_unsat": [1, 9, 12], "max_d_for_unsat_strict": [1, 12], "max_d_of_strict": [1, 11], "maximum": [9, 11, 12], "mean": 2, "method": 13, "might": 13, "model": [1, 4, 10, 11, 15], "modul": 1, "monoid": [9, 11, 12], "monomi": [2, 13], "moreov": 13, "multipli": [3, 12], "must": 11, "n": [4, 9], "name": [1, 6, 11, 13, 14], "need": 13, "need_strict": [8, 9, 12], "new": [2, 8, 9, 11, 12, 13, 14], "new_vari": 2, "newest": 14, "newli": [8, 9, 12], "node": [6, 10], "none": [4, 10, 11, 13, 14], "normal": 7, "number": 14, "number_of_vari": [1, 14], "object": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "one": [5, 13], "option": [1, 3, 4, 8, 9, 11, 12, 13, 14], "other": [3, 5, 13], "output": 11, "output_farka": 11, "output_path": 11, "paired_constraint": [1, 11], "param": 12, "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "pars": [6, 10, 15], "parse_readable_fil": [1, 10], "parse_smt_fil": [1, 10], "parse_tre": [6, 10], "parser": 1, "pass": 4, "path": [11, 15], "perform": [8, 9, 11, 12], "phase": 13, "poli": 6, "poly_str": 11, "poly_text": [6, 10], "polyhorn": 15, "polynomi": [1, 5, 6, 8, 9, 11, 12, 13], "polynomialconstraint": [1, 5, 8, 9, 12], "polyq": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "posit": 12, "positivemodel": [1, 10], "possibl": 4, "power": 12, "power_of_new_var": 12, "pre_vari": 13, "precondit": [1, 11, 13], "preorder": [2, 3, 5, 7, 14], "print": 4, "produc": 4, "program": [6, 11], "program_vari": [1, 6, 11], "put": 6, "putinar": [1, 4, 11], "pysmt": 15, "pysmt_to_smt2": [1, 15], "rang": 9, "ration": 3, "readabl": 15, "real": [11, 13], "real_valu": 11, "reason": 14, "recent": 14, "refer": 14, "relat": 5, "remov": 11, "remove_equality_constraint": [1, 11], "repres": [2, 3, 5, 6, 7, 10, 12, 14], "return": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "revis": [1, 2, 3], "rh": [1, 8, 9, 11, 12, 13], "right": [8, 9, 11, 12, 13], "root": [6, 10], "run": 11, "run_on_solv": [1, 11], "same": [2, 3], "sat": [9, 11, 12, 15], "satisfactori": 11, "satisfi": [8, 9, 11, 12, 15], "save": 11, "save_for_core_iteration_heuristic_temp": 11, "saving_path": 11, "search": 6, "second": 12, "semidefinit": 12, "separ": 6, "set": [2, 3, 4, 8, 9, 11, 12, 13], "should": [2, 3, 6, 11, 12, 13], "side": [5, 8, 9, 11, 12, 13], "sign": [1, 5], "smt": [11, 13], "smt2": 15, "smt_declare_variable_phas": [1, 13], "so": 9, "solver": [1, 4, 11, 15], "solver_nam": 11, "solver_path": 11, "some": [4, 11, 12, 13], "sort": [2, 3], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "squar": 12, "start": [6, 10], "static": [4, 11, 12, 13, 14], "str": [2, 3, 5, 6, 7, 10, 11, 13, 14, 15], "strict": [5, 9, 11, 12], "string": [2, 3, 5, 6, 7, 11, 13, 15], "struct": 12, "success": 4, "sum": [8, 9, 12], "system": [4, 15], "t": 12, "templat": [6, 11, 12, 14], "template_vari": [1, 11], "template_variables_nam": 11, "temporari": 11, "term": 3, "text": 6, "than": 9, "theorem": [1, 4, 8, 9, 11, 12], "theorem_nam": [1, 11], "thi": [2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14], "togeth": [2, 3, 13], "transform": [8, 9, 12], "travers": [1, 6, 10], "traverse_readable_tre": [1, 10], "traverse_smt_tre": [1, 10], "tree": [6, 10], "triangular": 12, "true": [2, 4, 5, 9, 11, 13], "tupl": [8, 9, 11, 12, 15], "two": [8, 9, 12, 13], "txt": 11, "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "type_of_var": [13, 14], "union": [3, 15], "uniqu": 14, "unknown": 15, "unknownvari": [1, 2, 3, 6, 8, 9, 11, 12, 13], "unsat": [9, 11, 12, 15], "unsatisfactori": 11, "unsatisfiabl": 12, "us": [4, 6, 10, 11, 13], "valu": [4, 9, 11, 13, 15], "variabl": [1, 2, 3, 5, 6, 8, 9, 11, 12, 13, 14], "w_1": 12, "w_2": 12, "w_j": 12, "w_n": 12, "when": [8, 9, 11, 12], "where": [3, 8, 9, 12], "which": [2, 3, 4, 8, 9, 11, 12, 13], "why": 14, "x": 2, "y": 2, "y_0": [8, 9, 12], "y_1": [8, 9], "y_2": [8, 9], "y_i": [8, 9], "y_n": [8, 9], "yet": 14, "z3": [4, 11], "zero": 5}, "titles": ["PolyQEnt", "PolyQEnt", "Polynomial module", "Coefficient module", "Constant module", "Constraint module", "Convertor module", "DNF module", "Farkas module", "Handelman module", "Parser module", "PositiveModel module", "Putinar module", "Solver module", "UnknownVariable module", "Main module"], "titleterms": {"api": 1, "coeffici": 3, "constant": 4, "constraint": 5, "convertor": 6, "dnf": 7, "farka": 8, "handelman": 9, "indic": 1, "main": 15, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "parser": 10, "polynomi": 2, "polyq": [0, 1], "positivemodel": 11, "putinar": 12, "solver": 13, "tabl": 1, "unknownvari": 14}})